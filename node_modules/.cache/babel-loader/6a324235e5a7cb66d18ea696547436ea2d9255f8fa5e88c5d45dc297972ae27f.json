{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\AppData\\\\Local\\\\Programs\\\\Microsoft VS Code\\\\chess-app\\\\src\\\\components\\\\ChessBoard.js\";\nimport React from 'react';\nimport './ChessBoard.css';\nimport ChessPiece from './ChessPiece';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChessBoard({\n  board,\n  selectedPiece,\n  onSquareClick,\n  lastMove,\n  inCheck\n}) {\n  const renderSquare = (row, col) => {\n    const isSelected = selectedPiece && selectedPiece.row === row && selectedPiece.col === col;\n    const isLastMoveFrom = lastMove && lastMove.from.row === row && lastMove.from.col === col;\n    const isLastMoveTo = lastMove && lastMove.to.row === row && lastMove.to.col === col;\n    const isLight = (row + col) % 2 === 0;\n\n    // Check if this square contains a king in check\n    const isKingInCheck = inCheck && board[row][col] && board[row][col].type === 'king' && board[row][col].color === (lastMove ? lastMove.color === 'white' ? 'black' : 'white' : 'black');\n    const squareClass = `square ${isLight ? 'light' : 'dark'} \n                        ${isSelected ? 'selected' : ''} \n                        ${isLastMoveFrom ? 'last-move-from' : ''} \n                        ${isLastMoveTo ? 'last-move-to' : ''}\n                        ${isKingInCheck ? 'king-in-check' : ''}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: squareClass,\n      onClick: () => onSquareClick(row, col),\n      children: board[row][col] && /*#__PURE__*/_jsxDEV(ChessPiece, {\n        type: board[row][col].type,\n        color: board[row][col].color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, `${row}-${col}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  };\n  const renderRow = row => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [0, 1, 2, 3, 4, 5, 6, 7].map(col => renderSquare(row, col))\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  };\n  const renderColumnLabels = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column-labels\",\n      children: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'].map(label => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: label\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  };\n  const renderRowLabels = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-labels\",\n      children: [8, 7, 6, 5, 4, 3, 2, 1].map(label => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: label\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chess-board-container\",\n    children: [renderColumnLabels(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-with-row-labels\",\n      children: [renderRowLabels(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chess-board\",\n        children: [0, 1, 2, 3, 4, 5, 6, 7].map(row => renderRow(row))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), renderColumnLabels()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_c = ChessBoard;\nexport default ChessBoard;\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","ChessPiece","jsxDEV","_jsxDEV","ChessBoard","board","selectedPiece","onSquareClick","lastMove","inCheck","renderSquare","row","col","isSelected","isLastMoveFrom","from","isLastMoveTo","to","isLight","isKingInCheck","type","color","squareClass","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","renderRow","map","renderColumnLabels","label","renderRowLabels","_c","$RefreshReg$"],"sources":["C:/Users/aksha/AppData/Local/Programs/Microsoft VS Code/chess-app/src/components/ChessBoard.js"],"sourcesContent":["import React from 'react';\nimport './ChessBoard.css';\nimport ChessPiece from './ChessPiece';\n\nfunction ChessBoard({ board, selectedPiece, onSquareClick, lastMove, inCheck }) {\n  const renderSquare = (row, col) => {\n    const isSelected = selectedPiece && selectedPiece.row === row && selectedPiece.col === col;\n    const isLastMoveFrom = lastMove && lastMove.from.row === row && lastMove.from.col === col;\n    const isLastMoveTo = lastMove && lastMove.to.row === row && lastMove.to.col === col;\n    const isLight = (row + col) % 2 === 0;\n    \n    // Check if this square contains a king in check\n    const isKingInCheck = inCheck && \n                          board[row][col] && \n                          board[row][col].type === 'king' && \n                          board[row][col].color === (lastMove ? \n                            (lastMove.color === 'white' ? 'black' : 'white') : 'black');\n    \n    const squareClass = `square ${isLight ? 'light' : 'dark'} \n                        ${isSelected ? 'selected' : ''} \n                        ${isLastMoveFrom ? 'last-move-from' : ''} \n                        ${isLastMoveTo ? 'last-move-to' : ''}\n                        ${isKingInCheck ? 'king-in-check' : ''}`;\n    \n    return (\n      <div \n        className={squareClass} \n        key={`${row}-${col}`}\n        onClick={() => onSquareClick(row, col)}\n      >\n        {board[row][col] && (\n          <ChessPiece \n            type={board[row][col].type} \n            color={board[row][col].color} \n          />\n        )}\n      </div>\n    );\n  };\n\n  const renderRow = (row) => {\n    return (\n      <div className=\"board-row\" key={row}>\n        {[0, 1, 2, 3, 4, 5, 6, 7].map(col => renderSquare(row, col))}\n      </div>\n    );\n  };\n\n  const renderColumnLabels = () => {\n    return (\n      <div className=\"column-labels\">\n        {['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'].map(label => (\n          <div key={label} className=\"label\">{label}</div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderRowLabels = () => {\n    return (\n      <div className=\"row-labels\">\n        {[8, 7, 6, 5, 4, 3, 2, 1].map(label => (\n          <div key={label} className=\"label\">{label}</div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"chess-board-container\">\n      {renderColumnLabels()}\n      <div className=\"board-with-row-labels\">\n        {renderRowLabels()}\n        <div className=\"chess-board\">\n          {[0, 1, 2, 3, 4, 5, 6, 7].map(row => renderRow(row))}\n        </div>\n      </div>\n      {renderColumnLabels()}\n    </div>\n  );\n}\n\nexport default ChessBoard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AACzB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,UAAUA,CAAC;EAAEC,KAAK;EAAEC,aAAa;EAAEC,aAAa;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,EAAE;EAC9E,MAAMC,YAAY,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;IACjC,MAAMC,UAAU,GAAGP,aAAa,IAAIA,aAAa,CAACK,GAAG,KAAKA,GAAG,IAAIL,aAAa,CAACM,GAAG,KAAKA,GAAG;IAC1F,MAAME,cAAc,GAAGN,QAAQ,IAAIA,QAAQ,CAACO,IAAI,CAACJ,GAAG,KAAKA,GAAG,IAAIH,QAAQ,CAACO,IAAI,CAACH,GAAG,KAAKA,GAAG;IACzF,MAAMI,YAAY,GAAGR,QAAQ,IAAIA,QAAQ,CAACS,EAAE,CAACN,GAAG,KAAKA,GAAG,IAAIH,QAAQ,CAACS,EAAE,CAACL,GAAG,KAAKA,GAAG;IACnF,MAAMM,OAAO,GAAG,CAACP,GAAG,GAAGC,GAAG,IAAI,CAAC,KAAK,CAAC;;IAErC;IACA,MAAMO,aAAa,GAAGV,OAAO,IACPJ,KAAK,CAACM,GAAG,CAAC,CAACC,GAAG,CAAC,IACfP,KAAK,CAACM,GAAG,CAAC,CAACC,GAAG,CAAC,CAACQ,IAAI,KAAK,MAAM,IAC/Bf,KAAK,CAACM,GAAG,CAAC,CAACC,GAAG,CAAC,CAACS,KAAK,MAAMb,QAAQ,GAChCA,QAAQ,CAACa,KAAK,KAAK,OAAO,GAAG,OAAO,GAAG,OAAO,GAAI,OAAO,CAAC;IAEnF,MAAMC,WAAW,GAAG,UAAUJ,OAAO,GAAG,OAAO,GAAG,MAAM;AAC5D,0BAA0BL,UAAU,GAAG,UAAU,GAAG,EAAE;AACtD,0BAA0BC,cAAc,GAAG,gBAAgB,GAAG,EAAE;AAChE,0BAA0BE,YAAY,GAAG,cAAc,GAAG,EAAE;AAC5D,0BAA0BG,aAAa,GAAG,eAAe,GAAG,EAAE,EAAE;IAE5D,oBACEhB,OAAA;MACEoB,SAAS,EAAED,WAAY;MAEvBE,OAAO,EAAEA,CAAA,KAAMjB,aAAa,CAACI,GAAG,EAAEC,GAAG,CAAE;MAAAa,QAAA,EAEtCpB,KAAK,CAACM,GAAG,CAAC,CAACC,GAAG,CAAC,iBACdT,OAAA,CAACF,UAAU;QACTmB,IAAI,EAAEf,KAAK,CAACM,GAAG,CAAC,CAACC,GAAG,CAAC,CAACQ,IAAK;QAC3BC,KAAK,EAAEhB,KAAK,CAACM,GAAG,CAAC,CAACC,GAAG,CAAC,CAACS;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B;IACF,GARI,GAAGlB,GAAG,IAAIC,GAAG,EAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASjB,CAAC;EAEV,CAAC;EAED,MAAMC,SAAS,GAAInB,GAAG,IAAK;IACzB,oBACER,OAAA;MAAKoB,SAAS,EAAC,WAAW;MAAAE,QAAA,EACvB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACM,GAAG,CAACnB,GAAG,IAAIF,YAAY,CAACC,GAAG,EAAEC,GAAG,CAAC;IAAC,GAD9BD,GAAG;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE9B,CAAC;EAEV,CAAC;EAED,MAAMG,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,oBACE7B,OAAA;MAAKoB,SAAS,EAAC,eAAe;MAAAE,QAAA,EAC3B,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACM,GAAG,CAACE,KAAK,iBACjD9B,OAAA;QAAiBoB,SAAS,EAAC,OAAO;QAAAE,QAAA,EAAEQ;MAAK,GAA/BA,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgC,CAChD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC;EAED,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC5B,oBACE/B,OAAA;MAAKoB,SAAS,EAAC,YAAY;MAAAE,QAAA,EACxB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACM,GAAG,CAACE,KAAK,iBACjC9B,OAAA;QAAiBoB,SAAS,EAAC,OAAO;QAAAE,QAAA,EAAEQ;MAAK,GAA/BA,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgC,CAChD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC;EAED,oBACE1B,OAAA;IAAKoB,SAAS,EAAC,uBAAuB;IAAAE,QAAA,GACnCO,kBAAkB,CAAC,CAAC,eACrB7B,OAAA;MAAKoB,SAAS,EAAC,uBAAuB;MAAAE,QAAA,GACnCS,eAAe,CAAC,CAAC,eAClB/B,OAAA;QAAKoB,SAAS,EAAC,aAAa;QAAAE,QAAA,EACzB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACM,GAAG,CAACpB,GAAG,IAAImB,SAAS,CAACnB,GAAG,CAAC;MAAC;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACLG,kBAAkB,CAAC,CAAC;EAAA;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV;AAACM,EAAA,GA5EQ/B,UAAU;AA8EnB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}