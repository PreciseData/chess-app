{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\AppData\\\\Local\\\\Programs\\\\Microsoft VS Code\\\\chess-app\\\\src\\\\components\\\\VoiceCommands.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './VoiceCommands.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VoiceCommands({\n  onCommand,\n  enabled\n}) {\n  _s();\n  const [listening, setListening] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [error, setError] = useState(null);\n  const [recognition, setRecognition] = useState(null);\n\n  // Initialize speech recognition\n  useEffect(() => {\n    // Check if browser supports speech recognition\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\n      setError('Speech recognition is not supported in this browser.');\n      return;\n    }\n\n    // Create speech recognition instance\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognitionInstance = new SpeechRecognition();\n\n    // Configure recognition\n    recognitionInstance.continuous = false;\n    recognitionInstance.interimResults = false;\n    recognitionInstance.lang = 'en-US';\n\n    // Set up event handlers\n    recognitionInstance.onstart = () => {\n      setListening(true);\n      setTranscript('');\n      setError(null);\n    };\n    recognitionInstance.onresult = event => {\n      const result = event.results[0][0].transcript.toLowerCase();\n      setTranscript(result);\n      processCommand(result);\n    };\n    recognitionInstance.onerror = event => {\n      setError(`Error: ${event.error}`);\n      setListening(false);\n    };\n    recognitionInstance.onend = () => {\n      setListening(false);\n    };\n    setRecognition(recognitionInstance);\n\n    // Clean up\n    return () => {\n      if (recognitionInstance) {\n        recognitionInstance.abort();\n      }\n    };\n  }, []);\n\n  // Process voice commands\n  const processCommand = command => {\n    // Chess move commands (e.g., \"move pawn to e4\")\n    const moveRegex = /move\\s+([a-z]+)\\s+(?:from\\s+)?([a-h][1-8])?\\s+to\\s+([a-h][1-8])/i;\n    const moveMatch = command.match(moveRegex);\n    if (moveMatch) {\n      const [_, piece, from, to] = moveMatch;\n      onCommand({\n        type: 'move',\n        piece: piece.toLowerCase(),\n        from: from ? from.toLowerCase() : null,\n        to: to.toLowerCase()\n      });\n      return;\n    }\n\n    // Direct square notation (e.g., \"e2 to e4\")\n    const directMoveRegex = /([a-h][1-8])\\s+to\\s+([a-h][1-8])/i;\n    const directMatch = command.match(directMoveRegex);\n    if (directMatch) {\n      const [_, from, to] = directMatch;\n      onCommand({\n        type: 'move',\n        from: from.toLowerCase(),\n        to: to.toLowerCase()\n      });\n      return;\n    }\n\n    // Game control commands\n    if (command.includes('reset board') || command.includes('new game')) {\n      onCommand({\n        type: 'reset'\n      });\n      return;\n    }\n    if (command.includes('clear board')) {\n      onCommand({\n        type: 'clear'\n      });\n      return;\n    }\n    if (command.includes('undo') || command.includes('take back')) {\n      onCommand({\n        type: 'undo'\n      });\n      return;\n    }\n\n    // AI difficulty commands\n    if (command.includes('easy mode') || command.includes('set difficulty to easy')) {\n      onCommand({\n        type: 'difficulty',\n        value: 'easy'\n      });\n      return;\n    }\n    if (command.includes('medium mode') || command.includes('set difficulty to medium')) {\n      onCommand({\n        type: 'difficulty',\n        value: 'medium'\n      });\n      return;\n    }\n    if (command.includes('hard mode') || command.includes('set difficulty to hard')) {\n      onCommand({\n        type: 'difficulty',\n        value: 'hard'\n      });\n      return;\n    }\n\n    // AI personality commands\n    if (command.includes('aggressive') || command.includes('set personality to aggressive')) {\n      onCommand({\n        type: 'personality',\n        value: 'aggressive'\n      });\n      return;\n    }\n    if (command.includes('defensive') || command.includes('set personality to defensive')) {\n      onCommand({\n        type: 'personality',\n        value: 'defensive'\n      });\n      return;\n    }\n    if (command.includes('creative') || command.includes('set personality to creative')) {\n      onCommand({\n        type: 'personality',\n        value: 'creative'\n      });\n      return;\n    }\n    if (command.includes('standard') || command.includes('set personality to standard')) {\n      onCommand({\n        type: 'personality',\n        value: 'standard'\n      });\n      return;\n    }\n\n    // If no command matched\n    onCommand({\n      type: 'unknown',\n      command\n    });\n  };\n\n  // Start listening for commands\n  const startListening = () => {\n    if (recognition && !listening && enabled) {\n      try {\n        recognition.start();\n      } catch (err) {\n        setError('Error starting voice recognition.');\n      }\n    }\n  };\n\n  // Stop listening\n  const stopListening = () => {\n    if (recognition && listening) {\n      recognition.stop();\n    }\n  };\n\n  // If voice commands are disabled, don't render the component\n  if (!enabled) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"voice-commands\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `voice-button ${listening ? 'listening' : ''}`,\n      onClick: listening ? stopListening : startListening,\n      disabled: !!error && !listening,\n      title: listening ? 'Stop listening' : 'Start voice command',\n      children: listening ? 'ðŸŽ¤ Listening...' : 'ðŸŽ¤'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), transcript && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transcript\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\\"\", transcript, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(VoiceCommands, \"xo8YBLGO1Zw2QKe12XT2yzJmKsE=\");\n_c = VoiceCommands;\nexport default VoiceCommands;\nvar _c;\n$RefreshReg$(_c, \"VoiceCommands\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","VoiceCommands","onCommand","enabled","_s","listening","setListening","transcript","setTranscript","error","setError","recognition","setRecognition","window","SpeechRecognition","webkitSpeechRecognition","recognitionInstance","continuous","interimResults","lang","onstart","onresult","event","result","results","toLowerCase","processCommand","onerror","onend","abort","command","moveRegex","moveMatch","match","_","piece","from","to","type","directMoveRegex","directMatch","includes","value","startListening","start","err","stopListening","stop","className","children","onClick","disabled","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aksha/AppData/Local/Programs/Microsoft VS Code/chess-app/src/components/VoiceCommands.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './VoiceCommands.css';\n\nfunction VoiceCommands({ onCommand, enabled }) {\n  const [listening, setListening] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [error, setError] = useState(null);\n  const [recognition, setRecognition] = useState(null);\n\n  // Initialize speech recognition\n  useEffect(() => {\n    // Check if browser supports speech recognition\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\n      setError('Speech recognition is not supported in this browser.');\n      return;\n    }\n\n    // Create speech recognition instance\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognitionInstance = new SpeechRecognition();\n    \n    // Configure recognition\n    recognitionInstance.continuous = false;\n    recognitionInstance.interimResults = false;\n    recognitionInstance.lang = 'en-US';\n    \n    // Set up event handlers\n    recognitionInstance.onstart = () => {\n      setListening(true);\n      setTranscript('');\n      setError(null);\n    };\n    \n    recognitionInstance.onresult = (event) => {\n      const result = event.results[0][0].transcript.toLowerCase();\n      setTranscript(result);\n      processCommand(result);\n    };\n    \n    recognitionInstance.onerror = (event) => {\n      setError(`Error: ${event.error}`);\n      setListening(false);\n    };\n    \n    recognitionInstance.onend = () => {\n      setListening(false);\n    };\n    \n    setRecognition(recognitionInstance);\n    \n    // Clean up\n    return () => {\n      if (recognitionInstance) {\n        recognitionInstance.abort();\n      }\n    };\n  }, []);\n\n  // Process voice commands\n  const processCommand = (command) => {\n    // Chess move commands (e.g., \"move pawn to e4\")\n    const moveRegex = /move\\s+([a-z]+)\\s+(?:from\\s+)?([a-h][1-8])?\\s+to\\s+([a-h][1-8])/i;\n    const moveMatch = command.match(moveRegex);\n    \n    if (moveMatch) {\n      const [_, piece, from, to] = moveMatch;\n      onCommand({\n        type: 'move',\n        piece: piece.toLowerCase(),\n        from: from ? from.toLowerCase() : null,\n        to: to.toLowerCase()\n      });\n      return;\n    }\n    \n    // Direct square notation (e.g., \"e2 to e4\")\n    const directMoveRegex = /([a-h][1-8])\\s+to\\s+([a-h][1-8])/i;\n    const directMatch = command.match(directMoveRegex);\n    \n    if (directMatch) {\n      const [_, from, to] = directMatch;\n      onCommand({\n        type: 'move',\n        from: from.toLowerCase(),\n        to: to.toLowerCase()\n      });\n      return;\n    }\n    \n    // Game control commands\n    if (command.includes('reset board') || command.includes('new game')) {\n      onCommand({ type: 'reset' });\n      return;\n    }\n    \n    if (command.includes('clear board')) {\n      onCommand({ type: 'clear' });\n      return;\n    }\n    \n    if (command.includes('undo') || command.includes('take back')) {\n      onCommand({ type: 'undo' });\n      return;\n    }\n    \n    // AI difficulty commands\n    if (command.includes('easy mode') || command.includes('set difficulty to easy')) {\n      onCommand({ type: 'difficulty', value: 'easy' });\n      return;\n    }\n    \n    if (command.includes('medium mode') || command.includes('set difficulty to medium')) {\n      onCommand({ type: 'difficulty', value: 'medium' });\n      return;\n    }\n    \n    if (command.includes('hard mode') || command.includes('set difficulty to hard')) {\n      onCommand({ type: 'difficulty', value: 'hard' });\n      return;\n    }\n    \n    // AI personality commands\n    if (command.includes('aggressive') || command.includes('set personality to aggressive')) {\n      onCommand({ type: 'personality', value: 'aggressive' });\n      return;\n    }\n    \n    if (command.includes('defensive') || command.includes('set personality to defensive')) {\n      onCommand({ type: 'personality', value: 'defensive' });\n      return;\n    }\n    \n    if (command.includes('creative') || command.includes('set personality to creative')) {\n      onCommand({ type: 'personality', value: 'creative' });\n      return;\n    }\n    \n    if (command.includes('standard') || command.includes('set personality to standard')) {\n      onCommand({ type: 'personality', value: 'standard' });\n      return;\n    }\n    \n    // If no command matched\n    onCommand({ type: 'unknown', command });\n  };\n\n  // Start listening for commands\n  const startListening = () => {\n    if (recognition && !listening && enabled) {\n      try {\n        recognition.start();\n      } catch (err) {\n        setError('Error starting voice recognition.');\n      }\n    }\n  };\n\n  // Stop listening\n  const stopListening = () => {\n    if (recognition && listening) {\n      recognition.stop();\n    }\n  };\n\n  // If voice commands are disabled, don't render the component\n  if (!enabled) {\n    return null;\n  }\n\n  return (\n    <div className=\"voice-commands\">\n      <button \n        className={`voice-button ${listening ? 'listening' : ''}`}\n        onClick={listening ? stopListening : startListening}\n        disabled={!!error && !listening}\n        title={listening ? 'Stop listening' : 'Start voice command'}\n      >\n        {listening ? 'ðŸŽ¤ Listening...' : 'ðŸŽ¤'}\n      </button>\n      \n      {transcript && (\n        <div className=\"transcript\">\n          <p>\"{transcript}\"</p>\n        </div>\n      )}\n      \n      {error && (\n        <div className=\"error\">\n          <p>{error}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default VoiceCommands;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}