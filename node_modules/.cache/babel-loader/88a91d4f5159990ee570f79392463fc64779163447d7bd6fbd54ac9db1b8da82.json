{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\AppData\\\\Local\\\\Programs\\\\Microsoft VS Code\\\\chess-app\\\\src\\\\components\\\\GameInfo.js\";\nimport React from 'react';\nimport './GameInfo.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GameInfo({\n  currentPlayer,\n  gameStatus,\n  moveHistory,\n  opponent,\n  playerColor\n}) {\n  const renderMoveHistory = () => {\n    return moveHistory.map((move, index) => {\n      // Handle special moves like board clearing\n      if (move.special) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"move-entry special-move\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"move-number\",\n            children: [Math.floor(index / 2) + 1, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"move\",\n            children: move.special\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this);\n      }\n      const moveNumber = Math.floor(index / 2) + 1;\n      const isWhiteMove = move.color === 'white';\n      const notation = `${move.piece} ${String.fromCharCode(97 + move.from.col)}${8 - move.from.row} → ${String.fromCharCode(97 + move.to.col)}${8 - move.to.row}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"move-entry\",\n        children: [isWhiteMove && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"move-number\",\n          children: [moveNumber, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `move ${isWhiteMove ? 'white-move' : 'black-move'}`,\n          children: notation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const getStatusMessage = () => {\n    switch (gameStatus) {\n      case 'check':\n        return `${currentPlayer} is in check`;\n      case 'checkmate':\n        return `${currentPlayer === 'white' ? 'Black' : 'White'} wins by checkmate`;\n      case 'stalemate':\n        return 'Game drawn by stalemate';\n      case 'timeout':\n        return `${currentPlayer === 'white' ? 'Black' : 'White'} wins on time`;\n      default:\n        return 'active';\n    }\n  };\n  const getPlayerInfo = () => {\n    if (opponent === 'human') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"White: Human\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Black: Human\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You: \", playerColor === 'white' ? 'White' : 'Black']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Computer: \", playerColor === 'white' ? 'Black' : 'White']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Player: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `player-${currentPlayer}`,\n            children: currentPlayer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Game Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-${gameStatus}`,\n            children: getStatusMessage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), getPlayerInfo()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Move History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"move-history\",\n        children: moveHistory.length > 0 ? renderMoveHistory() : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No moves yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_c = GameInfo;\nexport default GameInfo;\nvar _c;\n$RefreshReg$(_c, \"GameInfo\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","GameInfo","currentPlayer","gameStatus","moveHistory","opponent","playerColor","renderMoveHistory","map","move","index","special","className","children","Math","floor","fileName","_jsxFileName","lineNumber","columnNumber","moveNumber","isWhiteMove","color","notation","piece","String","fromCharCode","from","col","row","to","getStatusMessage","getPlayerInfo","length","_c","$RefreshReg$"],"sources":["C:/Users/aksha/AppData/Local/Programs/Microsoft VS Code/chess-app/src/components/GameInfo.js"],"sourcesContent":["import React from 'react';\nimport './GameInfo.css';\n\nfunction GameInfo({ currentPlayer, gameStatus, moveHistory, opponent, playerColor }) {\n  const renderMoveHistory = () => {\n    return moveHistory.map((move, index) => {\n      // Handle special moves like board clearing\n      if (move.special) {\n        return (\n          <div key={index} className=\"move-entry special-move\">\n            <span className=\"move-number\">{Math.floor(index / 2) + 1}.</span>\n            <span className=\"move\">\n              {move.special}\n            </span>\n          </div>\n        );\n      }\n      \n      const moveNumber = Math.floor(index / 2) + 1;\n      const isWhiteMove = move.color === 'white';\n      const notation = `${move.piece} ${String.fromCharCode(97 + move.from.col)}${8 - move.from.row} → ${String.fromCharCode(97 + move.to.col)}${8 - move.to.row}`;\n      \n      return (\n        <div key={index} className=\"move-entry\">\n          {isWhiteMove && <span className=\"move-number\">{moveNumber}.</span>}\n          <span className={`move ${isWhiteMove ? 'white-move' : 'black-move'}`}>\n            {notation}\n          </span>\n        </div>\n      );\n    });\n  };\n\n  const getStatusMessage = () => {\n    switch (gameStatus) {\n      case 'check':\n        return `${currentPlayer} is in check`;\n      case 'checkmate':\n        return `${currentPlayer === 'white' ? 'Black' : 'White'} wins by checkmate`;\n      case 'stalemate':\n        return 'Game drawn by stalemate';\n      case 'timeout':\n        return `${currentPlayer === 'white' ? 'Black' : 'White'} wins on time`;\n      default:\n        return 'active';\n    }\n  };\n\n  const getPlayerInfo = () => {\n    if (opponent === 'human') {\n      return (\n        <>\n          <p>White: Human</p>\n          <p>Black: Human</p>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <p>You: {playerColor === 'white' ? 'White' : 'Black'}</p>\n          <p>Computer: {playerColor === 'white' ? 'Black' : 'White'}</p>\n        </>\n      );\n    }\n  };\n\n  return (\n    <div className=\"game-info\">\n      <div className=\"status-section\">\n        <h2>Game Status</h2>\n        <div className=\"status\">\n          <p>Current Player: <span className={`player-${currentPlayer}`}>{currentPlayer}</span></p>\n          <p>Game Status: <span className={`status-${gameStatus}`}>{getStatusMessage()}</span></p>\n          {getPlayerInfo()}\n        </div>\n      </div>\n      \n      <div className=\"history-section\">\n        <h2>Move History</h2>\n        <div className=\"move-history\">\n          {moveHistory.length > 0 ? renderMoveHistory() : <p>No moves yet</p>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default GameInfo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}